---
# Teardown: Terminate all EC2 instances in the VPC
- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    region: us-east-2
    vpc_cidr: "10.0.0.0/16"
    public_subnet_cidr: "10.0.0.0/20"
    private_subnet_cidr: "10.0.128.0/20"
    key_name: plant-monitoring-key
    ami: ami-0cfde0ea8edd312d4
  tasks:
    # Lookup VPC by CIDR (for use in lookups below)
    - name: Lookup VPC by CIDR
      amazon.aws.ec2_vpc_net_info:
        region: "{{ region }}"
        filters:
          cidr: "{{ vpc_cidr }}"
      register: vpc_info

    # Set vpc_id fact for reuse
    - name: Set vpc_id fact
      set_fact:
        vpc_id: "{{ vpc_info.vpcs[0].id }}"
      when: vpc_info.vpcs is defined and vpc_info.vpcs|length > 0

    # Lookup all EC2 instances in VPC
    - name: Lookup all EC2 instances in VPC
      amazon.aws.ec2_instance_info:
        region: "{{ region }}"
        filters:
          vpc-id: "{{ vpc_id }}"
      register: vpc_ec2_info
      when: vpc_id is defined

    - name: Terminate all EC2 instances in VPC
      amazon.aws.ec2_instance:
        instance_ids: "{{ item.instance_id }}"
        state: absent
        region: "{{ region }}"
        wait: yes
      loop: "{{ vpc_ec2_info.instances }}"
      when: vpc_id is defined and vpc_ec2_info.instances is defined and vpc_ec2_info.instances|length > 0
